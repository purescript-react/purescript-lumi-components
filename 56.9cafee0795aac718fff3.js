(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{sy3o:function(e,n,a){"use strict";a.r(n),a.d(n,"docs",(function(){return f}));var o=a("DkUo"),t=a("5L+5"),s=a("YoO9"),i=a("jILx"),c=a("pMgY"),l=a("R8Br"),u=a("eAL6"),r=a("vKy7"),f=function(){var e=function(e){return l.a((function(n){return{css:function(n){return r.h()({backgroundColor:r.f(e),height:r.D(i.r)(i.h.value),width:r.D(i.r)(i.h.value)})},className:n.className,content:n.content}}))},n=[e(s.d),e(s.b),e(s.a)];return l.a((function(e){return{css:e.css,className:e.className,content:[c.n("Box is a simple building block component. Lumi components default to building off of Box and generally expect their JSX arguments to be Box-compatible elements."),c.n("A Box is essentially a div which defaults to a flex column. The most common flex settings are available as prop modifiers. Nested boxes will also stretch to fill their given space by default. If a component shouldn't grow beyond a specific size under any circumstances, be sure to give it a max-width!"),i.s(i.e.value),c.e("Defaults"),t.a(o.e(l.a)(n)),c.e("Row"),t.a(l.a(o.e(u.o)(n))),c.e("Align/justify"),t.a(l.c(u.i(u.g.value)(o.e(u.n(u.c.value))(n)))),c.e("Space evenly"),t.a(l.b(u.i(u.g.value)(o.e(u.n(u.e.value))(n))))]}}))}()}}]);