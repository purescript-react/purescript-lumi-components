(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{sy3o:function(e,t,o){"use strict";var n,s,a=o("Wg6S"),l=o("DkUo"),i=o("5L+5"),c=o("jILx"),r=o("pMgY"),u=o("R8Br"),p=o("eAL6"),m=o("vKy7"),f=(s=[(n=function(e){return u.box((function(t){return{css:function(t){return m.css()({backgroundColor:m.color(e),height:m.prop(c.isStylePropertySpace)(c.S40.value),width:m.prop(c.isStylePropertySpace)(c.S40.value)})},className:t.className,content:t.content}}))})(a.red),n(a.green),n(a.blue)],u.box((function(e){return{css:e.css,className:e.className,content:[r.p_("Box is a simple building block component. Lumi components default to building off of Box and generally expect their JSX arguments to be Box-compatible elements."),r.p_("A Box is essentially a div which defaults to a flex column. The most common flex settings are available as prop modifiers. Nested boxes will also stretch to fill their given space by default. If a component shouldn't grow beyond a specific size under any circumstances, be sure to give it a max-width!"),c.vspace(c.S24.value),r.h2_("Defaults"),i.example(l.withContent(u.box)(s)),r.h2_("Row"),i.example(u.box(l.withContent(p._row)(s))),r.h2_("Align/justify"),i.example(u.row(p._alignSelf(p.Stretch.value)(l.withContent(p._justify(p.End.value))(s)))),r.h2_("Space evenly"),i.example(u.column(p._alignSelf(p.Stretch.value)(l.withContent(p._justify(p.SpaceEvenly.value))(s))))]}})));e.exports={docs:f}}}]);